# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'aa.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QDateTime
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QMessageBox

from CSVHandler import handler
from RegEx import Validator
from db import DBCon


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(609, 428)
        font = QtGui.QFont()
        font.setPointSize(8)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setMouseTracking(False)
        self.label.setAutoFillBackground(True)
        self.label.setObjectName("label")
        self.gridLayout_8.addWidget(self.label, 0, 0, 1, 1)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_8.addWidget(self.frame, 0, 1, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.frame_4 = QtWidgets.QFrame(self.tab)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_3 = QtWidgets.QLabel(self.frame_4)
        self.label_3.setObjectName("label_3")
        self.gridLayout_4.addWidget(self.label_3, 0, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout_4.addWidget(self.lineEdit_2, 0, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.frame_4)
        self.label_4.setObjectName("label_4")
        self.gridLayout_4.addWidget(self.label_4, 1, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout_4.addWidget(self.lineEdit_3, 1, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.frame_4)
        self.label_5.setObjectName("label_5")
        self.gridLayout_4.addWidget(self.label_5, 2, 0, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout_4.addWidget(self.lineEdit_4, 2, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.frame_4)
        self.label_6.setObjectName("label_6")
        self.gridLayout_4.addWidget(self.label_6, 3, 0, 1, 1)
        self.dateEdit = QtWidgets.QDateEdit(self.frame_4)
        self.dateEdit.setObjectName("dateEdit")
        self.gridLayout_4.addWidget(self.dateEdit, 3, 1, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_4.addWidget(self.pushButton_2, 4, 1, 1, 1)
        self.gridLayout_6.addWidget(self.frame_4, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.Advertisement = QtWidgets.QWidget()
        self.Advertisement.setObjectName("Advertisement")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.Advertisement)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame_2 = QtWidgets.QFrame(self.Advertisement)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        # self.label_11 = QtWidgets.QLabel(self.frame_2)
        # self.label_11.setObjectName("label_11")
        # self.gridLayout_2.addWidget(self.label_11, 0, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 1, 1, 1, 1)
        self.dateEdit_2 = QtWidgets.QDateEdit(self.frame_2)
        self.dateEdit_2.setObjectName("dateEdit_2")
        self.gridLayout_2.addWidget(self.dateEdit_2, 1, 2, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.frame_2)
        self.label_8.setObjectName("label_8")
        self.gridLayout_2.addWidget(self.label_8, 2, 1, 1, 1)
        self.dateEdit_3 = QtWidgets.QDateEdit(self.frame_2)
        self.dateEdit_3.setObjectName("dateEdit_3")
        self.gridLayout_2.addWidget(self.dateEdit_3, 2, 2, 1, 1)
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_8.setObjectName("pushButton_8")
        self.gridLayout_2.addWidget(self.pushButton_8, 3, 2, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.frame_2)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 3, 1, 1, 1)
        self.gridLayout_5.addWidget(self.frame_2, 2, 0, 1, 1)
        self.tabWidget.addTab(self.Advertisement, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout.setObjectName("gridLayout")
        self.label_9 = QtWidgets.QLabel(self.tab_3)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 0, 0, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 0, 1, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.tab_3)
        self.label_10.setObjectName("label_10")
        self.gridLayout.addWidget(self.label_10, 1, 0, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout.addWidget(self.pushButton_4, 1, 1, 1, 1)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout.addWidget(self.lineEdit_5, 2, 0, 1, 1)
        self.pushButton_5 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout.addWidget(self.pushButton_5, 2, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.tab_3)
        self.label_12.setObjectName("label_12")
        self.gridLayout.addWidget(self.label_12, 3, 0, 1, 1)
        self.pushButton_7 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_7.setObjectName("pushButton_7")
        self.gridLayout.addWidget(self.pushButton_7, 3, 1, 1, 1)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.pushButton_6 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout_7.addWidget(self.pushButton_6, 1, 0, 1, 1)
        self.pushButton_9 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_9.setObjectName("pushButton_9")
        self.gridLayout_7.addWidget(self.pushButton_9, 2, 0, 1, 1)
        self.tabWidget.addTab(self.tab_2, "")
        self.gridLayout_8.addWidget(self.tabWidget, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 609, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # Method call from tab1
        self.dateEdit.setDateTime(QDateTime.currentDateTime())
        self.dateEdit_2.setDateTime(QDateTime.currentDateTime())
        self.dateEdit_3.setDateTime(QDateTime.currentDateTime())
        self.pushButton_2.clicked.connect(self.addtodb)

        # Method call from tab2
        self.pushButton.clicked.connect(self.sendmailall)
        self.pushButton_8.clicked.connect(self.sendmail)

        # Method call from tab3
        self.pushButton_3.clicked.connect(self.delprevyear)
        self.pushButton_4.clicked.connect(self.delprevmonth)
        self.pushButton_5.clicked.connect(self.delspecific)
        self.pushButton_7.clicked.connect(self.delall)

        # Method call from tab4
        self.pushButton_6.clicked.connect(self.showall)
        self.pushButton_9.clicked.connect(self.savetocsv)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("CRM", "CRM"))
        MainWindow.setWindowIcon(QIcon('crm.png'))
        self.label.setText(_translate("MainWindow", "Customer Relationship Management"))
        # self.label_2.setText(_translate("MainWindow", "Add Advertisement File:"))
        # self.lineEdit.setPlaceholderText(_translate("MainWindow", "Type Path"))
        self.label_7.setText(_translate("MainWindow", "Start :"))
        # self.label_11.setText(_translate("MainWindow", "Send Advertisement E-mail to Customers visited between"))
        self.label_8.setText(_translate("MainWindow", "End:"))
        # self.checkBox_2.setText(_translate("MainWindow", "Send to customer"))
        self.pushButton_8.setText(_translate("MainWindow", "Sendto Customers visited between above Slot"))
        self.pushButton.setText(_translate("MainWindow", "Send to All"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Advertisement), _translate("MainWindow", "Advertisement"))
        self.label_9.setText(_translate("MainWindow", "Delete Previous Year Record:"))
        self.pushButton_3.setText(_translate("MainWindow", "DELETE"))
        self.label_10.setText(_translate("MainWindow", "Delete Previous Month Record:"))
        self.pushButton_4.setText(_translate("MainWindow", "DELETE"))
        self.lineEdit_5.setPlaceholderText(_translate("MainWindow", "Enter E-mail Address of Customer to be deleted"))
        self.pushButton_5.setText(_translate("MainWindow", "DELETE"))
        self.label_12.setText(_translate("MainWindow", "Delete All Record:"))
        self.pushButton_7.setText(_translate("MainWindow", "DELETE"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Delete Previous Records"))
        self.pushButton_6.setText(_translate("MainWindow", "Show Details of All Customers"))
        self.pushButton_9.setText(_translate("MainWindow", "Save Details of All Customers to CSV"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Get Customer Details"))
        self.label_3.setText(_translate("MainWindow", "Name:"))
        self.lineEdit_2.setPlaceholderText(_translate("MainWindow", "Enter Customer Name"))
        self.label_4.setText(_translate("MainWindow", "Email:"))
        self.lineEdit_3.setPlaceholderText(_translate("MainWindow", "Enter Customer E-mail Address"))
        self.label_5.setText(_translate("MainWindow", "Mobile:"))
        self.lineEdit_4.setPlaceholderText(_translate("MainWindow", "Enter Customer Mobile Number"))
        self.label_6.setText(_translate("MainWindow", "Visiting Date:"))
        self.pushButton_2.setText(_translate("MainWindow", "Add Customer To System"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Add Customer"))

    def addtodb(self):
        print("in addtoDB")
        if self.lineEdit_2.text() == "":
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Enter Customer Name")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Name not Specified")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
            return
        elif not Validator.checkemail(self.lineEdit_3.text()):
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Enter Valid Email Address")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Incorrect Email-id")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
            return
        elif not Validator.checkmob(self.lineEdit_4.text()):
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Enter Valid Mobile Number")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Incorrect Mobile No.")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
            return
        else:
            print("calling init")
            ch = DBCon.dbinitop(self)
            if ch == 1:
                msg_box = QMessageBox()
                msg_box.setIcon(QMessageBox.Information)
                msg_box.setText("Customer added to System successfully")
                msg_box.setWindowIcon(QIcon('crm.png'))
                msg_box.setWindowTitle("Added Customer")
                msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
                retval = msg_box.exec_()
                self.lineEdit_2.setText("")
                self.lineEdit_3.setText("")
                self.lineEdit_4.setText("")
            else:
                msg_box = QMessageBox()
                msg_box.setIcon(QMessageBox.Warning)
                msg_box.setText("Problem With Database....")
                msg_box.setWindowIcon(QIcon('crm.png'))
                msg_box.setWindowTitle("Restart Database")
                msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
                retval = msg_box.exec_()

    def sendmail(self):
            print("mailing")
            ch = DBCon.dbpickup(2, self)
            if ch == 1:
                msg_box = QMessageBox()
                msg_box.setIcon(QMessageBox.Information)
                msg_box.setText("Advertisement E-mails sent successfully")
                msg_box.setWindowIcon(QIcon('crm.png'))
                msg_box.setWindowTitle("Advertisement Sent")
                msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
                retval = msg_box.exec_()
            else:
                msg_box = QMessageBox()
                msg_box.setIcon(QMessageBox.Warning)
                msg_box.setText("Problem With Database....")
                msg_box.setWindowIcon(QIcon('crm.png'))
                msg_box.setWindowTitle("Restart Database")
                msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
                retval = msg_box.exec_()


    def sendmailall(self):
            print("mailing")
            ch = DBCon.dbpickup(1, self)
            if ch == 1:
                msg_box = QMessageBox()
                msg_box.setIcon(QMessageBox.Information)
                msg_box.setText("Advertisement E-mails sent successfully")
                msg_box.setWindowIcon(QIcon('crm.png'))
                msg_box.setWindowTitle("Advertisement Sent")
                msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
                retval = msg_box.exec_()
            else:
                msg_box = QMessageBox()
                msg_box.setIcon(QMessageBox.Warning)
                msg_box.setText("Problem With Database....")
                msg_box.setWindowIcon(QIcon('crm.png'))
                msg_box.setWindowTitle("Restart Database")
                msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
                retval = msg_box.exec_()

    def delprevyear(self):
        ch = DBCon.delfromdb(1, self)
        if ch == 1:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Information)
            msg_box.setText("Successfully deleted records from previous year from System")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Deleted Records")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
        else:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Problem With Database....")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Restart Database")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()


    def delprevmonth(self):
        ch = DBCon.delfromdb(2, self)
        if ch == 1:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Information)
            msg_box.setText("Successfully deleted records from previous month from System")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Deleted Records")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
        else:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Problem With Database....")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Restart Database")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()

    def delall(self):
        ch = DBCon.delfromdb(4, self)
        if ch == 1:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Information)
            msg_box.setText("Successfully deleted all records from System")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Deleted Records")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
        else:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Problem With Database....")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Restart Database")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()

    def delspecific(self):
        ch = DBCon.delfromdb(3, self)
        if ch == 1:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Information)
            msg_box.setText("Successfully deleted record")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Deleted Records")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
            self.lineEdit_5.setText("")
        elif ch == 2:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Information)
            msg_box.setText("No user exists with given E-mail Address")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("No User Found")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
            self.lineEdit_5.setText("")
        else:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Problem With Database....")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Restart Database")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()

    def showall(self):
        str = DBCon.selectfromdb(1, self)
        if str == "failed":
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Problem With Database....")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Restart Database")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
        else:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText(str)
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Customer Details")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()

    def savetocsv(self):
        ch = handler.dbtocsv(self)
        if ch == 1:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Information)
            msg_box.setText("Successfully Imported data to CSV file")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Imported Records")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()
        else:
            msg_box = QMessageBox()
            msg_box.setIcon(QMessageBox.Warning)
            msg_box.setText("Problem With Database....")
            msg_box.setWindowIcon(QIcon('crm.png'))
            msg_box.setWindowTitle("Restart Database")
            msg_box.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            retval = msg_box.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
